#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILES 100
#define MAX_FILENAME_LEN 20

struct file {
    char name[MAX_FILENAME_LEN];
    int size;
};

int num_files = 0;
struct file files[MAX_FILES];

void create_file() {
    if (num_files >= MAX_FILES) {
        printf("Error: maximum number of files reached\n");
        return;
    }

    char filename[MAX_FILENAME_LEN];
    printf("Enter filename: ");
    scanf("%s", filename);

    for (int i = 0; i < num_files; i++) {
        if (strcmp(files[i].name, filename) == 0) {
            printf("Error: file already exists\n");
            return;
        }
    }

    int filesize;
    printf("Enter file size: ");
    scanf("%d", &filesize);

    strcpy(files[num_files].name, filename);
    files[num_files].size = filesize;
    num_files++;

    printf("File created successfully\n");
}

void delete_file() {
    if (num_files == 0) {
        printf("Error: no files exist\n");
        return;
    }

    char filename[MAX_FILENAME_LEN];
    printf("Enter filename: ");
    scanf("%s", filename);

    int found = 0;
    for (int i = 0; i < num_files; i++) {
        if (strcmp(files[i].name, filename) == 0) {
            found = 1;
            printf("File '%s' deleted successfully\n", files[i].name);
            for (int j = i; j < num_files - 1; j++) {
                files[j] = files[j+1];
            }
            num_files--;
            break;
        }
    }

    if (!found) {
        printf("Error: file not found\n");
    }
}

void display_files() {
    if (num_files == 0) {
        printf("No files exist\n");
        return;
    }

    printf("Files:\n");
    for (int i = 0; i < num_files; i++) {
        printf("%s\t%d\n", files[i].name, files[i].size);
    }
}

int main() {
    int choice;
    while (1) {
        printf("\n1. Create file\n2. Delete file\n3. Display files\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                create_file();
                break;
            case 2:
                delete_file();
                break;
            case 3:
                display_files();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice\n");
        }
    }
}
